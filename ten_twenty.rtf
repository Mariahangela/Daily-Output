{\rtf1\ansi\ansicpg1252\cocoartf2639
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fmodern\fcharset0 Courier;\f2\fmodern\fcharset0 Courier-Oblique;
}
{\colortbl;\red255\green255\blue255;\red191\green100\blue37;\red255\green255\blue255;\red88\green118\blue71;
\red153\green168\blue186;\red172\green168\blue31;\red253\green187\blue90;\red133\green96\blue154;\red86\green133\blue173;
\red190\green99\blue37;\red154\green169\blue186;}
{\*\expandedcolortbl;;\cssrgb\c79920\c46956\c19137;\cssrgb\c100000\c100000\c100000;\cssrgb\c41609\c52985\c34799;
\cssrgb\c66409\c71888\c77837;\cssrgb\c73132\c70738\c15791;\cssrgb\c99879\c77609\c42650;\cssrgb\c59713\c46577\c66896;\cssrgb\c40804\c59334\c73555;
\cssrgb\c79798\c46785\c18866;\cssrgb\c66525\c72013\c77879;}
\margl1440\margr1440\vieww12940\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs36 \cf0 October 20, 2022\
\
	Today, I continue to add more details in my app. I also added a timer, which is already functionng but still have errors somewhere.\
\
\
\
	QUIZPAGE.DART\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f1 \cf2 \cb3 import \cf4 'dart:async'\cf2 ;\
import \cf4 'dart:convert'\cf2 ;\
\
import \cf4 'package:flutter/material.dart'\cf2 ;\
import \cf4 'package:flutter/services.dart'\cf2 ;\
import \cf4 'package:star/resultpage.dart'\cf2 ;\
\
class \cf5 getjson \cf2 extends \cf5 StatelessWidget \{\
\
  \cf6 @override\
  \cf5 Widget \cf7 build\cf5 (BuildContext context) \{\
    \cf2 return \cf7 FutureBuilder\cf5 (\
      future: DefaultAssetBundle.
\f2\i \cf7 of
\f1\i0 \cf5 (context).loadString(\cf4 "assets/UNO1.json"\cf5 )\cf2 ,\
      \cf5 builder: (context\cf2 , \cf5 snapshot)\{\
        List mydata = json.decode(snapshot.\cf8 data\cf5 .toString())\cf2 ;\
        if\cf5 (mydata == \cf2 true\cf5 ) \{\
          \cf2 return const \cf7 Scaffold\cf5 (\
            body: \cf7 Center\cf5 (\
              child: \cf7 Text\cf5 (\
                \cf4 "Loading..."\cf2 ,\
              \cf5 )\cf2 ,\
            \cf5 )\cf2 ,\
          \cf5 )\cf2 ;\
        \cf5 \}\cf2 else\cf5 \{\
          \cf2 return \cf7 quizpage\cf5 (mydata: mydata)\cf2 ;\
        \cf5 \}\
      \}\cf2 ,\
    \cf5 )\cf2 ;\
  \cf5 \}\
\}\
\
\cf2 class \cf5 quizpage \cf2 extends \cf5 StatefulWidget \{\
\
  \cf2 var \cf8 mydata\cf2 ;\
\
  \cf5 quizpage(\{Key? key\cf2 ,\cf6 @required \cf2 this\cf5 .\cf8 mydata\cf5 \}) : \cf2 super\cf5 (key : key)\cf2 ;\
\
  \cf6 @override\
  \cf5 _quizpageState \cf7 createState\cf5 () => \cf7 _quizpageState\cf5 (\cf8 mydata\cf5 )\cf2 ;\
\cf5 \}\
\
\cf2 class \cf5 _quizpageState \cf2 extends \cf5 State<quizpage> \{\
  \cf2 var \cf8 mydata\cf2 ;\
  \cf5 _quizpageState(\cf2 this\cf5 .\cf8 mydata\cf5 )\cf2 ;\
\
  \cf5 Color \cf8 colortoshow \cf5 = \cf7 Color\cf5 (\cf9 0xFF252c4a\cf5 )\cf2 ;\
  \cf5 Color \cf8 right \cf5 = Colors.
\f2\i \cf8 green
\f1\i0 \cf2 ;\
  \cf5 Color \cf8 wrong \cf5 = Colors.
\f2\i \cf8 red
\f1\i0 \cf2 ;\
  \cf5 int \cf8 marks \cf5 = \cf9 0\cf2 ;\
  \cf5 int \cf8 i \cf5 = \cf9 1\cf2 ;\
  \cf5 int \cf8 timer \cf5 = \cf9 20\cf2 ;\
  \cf5 String \cf8 showtimer \cf5 = \cf4 "20"\cf2 ;\
\
  \cf5 Map<String\cf2 , \cf5 Color> \cf8 btncolor \cf5 = \{\
    \cf4 "a"\cf5 : \cf7 Color\cf5 (\cf9 0xFF252c4a\cf5 )\cf2 ,\
    \cf4 "b"\cf5 : \cf7 Color\cf5 (\cf9 0xFF252c4a\cf5 )\cf2 ,\
    \cf4 "c"\cf5 : \cf7 Color\cf5 (\cf9 0xFF252c4a\cf5 )\cf2 ,\
    \cf4 "d"\cf5 : \cf7 Color\cf5 (\cf9 0xFF252c4a\cf5 )\cf2 ,\
  \cf5 \}\cf2 ;\
\
   \cf5 bool \cf8 canceltimer \cf5 = \cf2 false;\
\
  \cf6 @override\
  \cf2 void \cf7 initState\cf5 () \{\
    starttimer()\cf2 ;\
    super\cf5 .initState()\cf2 ;\
  \cf5 \}\
\
  \cf2 void \cf7 starttimer\cf5 () \cf2 async \cf5 \{\
    \cf2 const \cf5 onesec = \cf7 Duration\cf5 (seconds: \cf9 1\cf5 )\cf2 ;\
     \cf7 Timer\cf5 .\cf7 periodic\cf5 (onesec\cf2 , \cf5 (Timer t)\{\
       setState(() \{\
         \cf2 if\cf5 (\cf8 timer \cf5 < \cf9 1\cf5 ) \{\
           t.cancel()\cf2 ;\
           \cf5 nextquestion()\cf2 ;\
         \cf5 \}\cf2 else if \cf5 (\cf8 canceltimer \cf5 = \cf2 true\cf5 )\{\
            t.cancel()\cf2 ;\
         \cf5 \}\cf2 else \cf5 \{\
           \cf8 timer \cf5 = \cf8 timer \cf5 -\cf9 1\cf2 ;\
         \cf5 \}\
         \cf8 showtimer \cf5 = \cf8 timer\cf5 .toString()\cf2 ;\
       \cf5 \})\cf2 ;\
     \cf5 \})\cf2 ;\
  \cf5 \}\
\
  \cf2 void \cf7 nextquestion\cf5 () \{\
     \cf8 canceltimer \cf5 = \cf2 false;\
    \cf8 timer \cf5 = \cf9 20\cf2 ;\
   \cf5 setState(() \{\
     \cf2 if\cf5 (\cf8 i \cf5 < \cf9 5\cf5 )\{\
       \cf8 i\cf5 ++\cf2 ;\
     \cf5 \}\cf2 else\cf5 \{\
       Navigator.
\f2\i \cf7 of
\f1\i0 \cf5 (\cf8 context\cf5 ).pushReplacement(\cf7 MaterialPageRoute\cf5 (\
           builder: (context) => \cf7 resultpage\cf5 ()\cf2 ,\
           \cf5 ))\cf2 ;\
\
     \cf5 \}\
     \cf8 btncolor\cf5 [\cf4 "a"\cf5 ] = \cf7 Color\cf5 (\cf9 0xFF252c4a\cf5 )\cf2 ;\
     \cf8 btncolor\cf5 [\cf4 "b"\cf5 ] = \cf7 Color\cf5 (\cf9 0xFF252c4a\cf5 )\cf2 ;\
     \cf8 btncolor\cf5 [\cf4 "c"\cf5 ] = \cf7 Color\cf5 (\cf9 0xFF252c4a\cf5 )\cf2 ;\
     \cf8 btncolor\cf5 [\cf4 "d"\cf5 ] = \cf7 Color\cf5 (\cf9 0xFF252c4a\cf5 )\cf2 ;\
   \cf5 \})\cf2 ;\
   \cf5 starttimer()\cf2 ;\
  \cf5 \}\
\
  \cf2 void \cf7 checkanswer\cf5 (String k)\{\
    \cf2 if\cf5 (\cf8 mydata\cf5 [\cf9 2\cf5 ][\cf4 "1"\cf5 ] == \cf8 mydata \cf5 [\cf9 1\cf5 ][\cf4 "1"\cf5 ][k])\{\
      \cf8 marks \cf5 = \cf8 marks \cf5 + \cf9 5\cf2 ;\
      \cf8 colortoshow \cf5 = \cf8 right\cf2 ;\
    \cf5 \}\cf2 else\cf5 \{\
       \cf8 colortoshow \cf5 = \cf8 wrong\cf2 ;\
    \cf5 \}\
    setState(() \{\
      \cf8 btncolor\cf5 [k] = \cf8 colortoshow\cf2 ;\
      \cf8 canceltimer \cf5 = \cf2 true;\
    \cf5 \})\cf2 ;\
\
    \cf7 Timer\cf5 (\cf7 Duration\cf5 (seconds: \cf9 2\cf5 )\cf2 , \cf7 nextquestion\cf5 )\cf2 ;\
  \cf5 \}\
\
Widget \cf7 choicebutton\cf5 (String k) \{\
  \cf2 return \cf7 Padding\cf5 (\
      padding: \cf7 EdgeInsets\cf5 .\cf7 symmetric\cf5 (\
        vertical: \cf9 10.0\cf2 ,\
        \cf5 horizontal: \cf9 20.0\cf2 ,\
      \cf5 )\cf2 ,\
    \cf5 child: \cf7 MaterialButton\cf5 (\
      onPressed: () => checkanswer(k)\cf2 ,\
      \cf5 child: \cf7 Text\cf5 (\
        \cf8 mydata \cf5 [\cf9 1\cf5 ] [\cf8 i\cf5 .toString()] [k]\cf2 ,\
        \cf5 style: \cf7 TextStyle\cf5 (\
          color: Colors.
\f2\i \cf8 white
\f1\i0 \cf2 ,\
          \cf5 fontSize: \cf9 20.0\cf2 ,\
        \cf5 )\cf2 ,\
        \cf5 maxLines: \cf9 1\cf2 ,\
      \cf5 )\cf2 ,\
      \cf5 color:\cf8 btncolor\cf5 [k]\cf2 ,\
      \cf5 splashColor:  Colors.
\f2\i \cf8 indigo
\f1\i0 \cf5 [\cf9 900\cf5 ]\cf2 ,\
      \cf5 highlightColor: Colors.
\f2\i \cf8 indigo
\f1\i0 \cf5 [\cf9 700\cf5 ]\cf2 ,\
      \cf5 minWidth: \cf9 200.0\cf2 ,\
      \cf5 height: \cf9 40.0\cf2 ,\
      \cf5 shape: \cf7 RoundedRectangleBorder\cf5 (borderRadius: \cf7 BorderRadius\cf5 .\cf7 circular\cf5 (\cf9 20.0\cf5 ))\cf2 ,\
    \cf5 )\cf2 ,\
  \cf5 )\cf2 ;\
\cf5 \}\
\
  \cf6 @override\
  \cf5 Widget \cf7 build\cf5 (BuildContext context) \{\
  SystemChrome.
\f2\i \cf7 setPreferredOrientations
\f1\i0 \cf5 ([\
    DeviceOrientation.\cf8 portraitDown\cf2 ,  \cf5 DeviceOrientation.\cf8 portraitUp\cf2 ,\
  \cf5 ])\cf2 ;\
    return  \cf7 WillPopScope\cf5 (\
      onWillPop:() \cf2 async \cf5 \{\
\
       showDialog(\
            context: context\cf2 ,\
            \cf5 builder: (context) => \cf7 AlertDialog\cf5 (\
              title: \cf7 Text \cf5 (\cf4 "Quiz App"\cf5 )\cf2 ,\
              \cf5 content: \cf7 Text\cf5 (\cf4 "You can't go back at this stage."\cf5 )\cf2 ,\
          \cf5 actions: <Widget>[\
              \cf7 TextButton\cf5 (\
                onPressed: () \{\
                  Navigator.
\f2\i \cf7 of
\f1\i0 \cf5 (context).pop()\cf2 ;\
                \cf5 \}\cf2 ,\
               \cf5 child: \cf7 Text\cf5 (\cf4 "OK!"\cf5 )\cf2 ,\
            \cf5 )\cf2 ,\
          \cf5 ]\cf2 ,\
        \cf5 )\cf2 ,\
       \cf5 )\cf2 ;\
       return true;\
      \cf5 \}\cf2 ,\
      \cf5 child: \cf7 Scaffold\cf5 (\
        body: \cf7 Column\cf5 (\
          children: <Widget> [\
            \cf7 Expanded\cf5 (\
              flex: \cf9 3\cf2 ,\
              \cf5 child: \cf7 Container\cf5 (\
                alignment: Alignment.
\f2\i \cf8 bottomLeft
\f1\i0 \cf2 ,\
                \cf5 padding: \cf7 EdgeInsets\cf5 .\cf7 all\cf5 (\cf9 15.0\cf5 )\cf2 ,\
                \cf5 child: \cf7 Text\cf5 (\
                  \cf8 mydata\cf5 [\cf9 0\cf5 ] [\cf4 "1"\cf5 ]\cf2 ,\
                  \cf5 style: \cf7 TextStyle\cf5 (\
                    fontSize: (\cf9 25.0\cf5 )\cf2 ,\
                  \cf5 )\cf2 ,\
                \cf5 )\cf2 ,\
              \cf5 )\cf2 ,\
            \cf5 )\cf2 ,\
            \cf7 Expanded\cf5 (\
              flex: \cf9 5\cf2 ,\
              \cf5 child: \cf7 Container\cf5 (\
                child: \cf7 Column\cf5 (\
                  mainAxisAlignment: MainAxisAlignment.\cf8 center\cf2 ,\
                  \cf5 children: <Widget>[\
                    choicebutton(\cf4 "a"\cf5 )\cf2 ,\
                    \cf5 choicebutton(\cf4 "b"\cf5 )\cf2 ,\
                    \cf5 choicebutton(\cf4 "c"\cf5 )\cf2 ,\
                    \cf5 choicebutton(\cf4 "d"\cf5 )\cf2 ,\
                  \cf5 ]\cf2 ,\
                \cf5 )\cf2 ,\
              \cf5 )\cf2 ,\
            \cf5 )\cf2 ,\
            \cf7 Expanded\cf5 (\
              flex: \cf9 2\cf2 ,\
              \cf5 child: \cf7 Container\cf5 (\
                alignment: Alignment.
\f2\i \cf8 bottomCenter
\f1\i0 \cf2 ,\
                \cf5 child: \cf7 Center\cf5 (\
                  child:  \cf7 Text\cf5 (\
                   \cf8 showtimer\cf2 ,\
                    \cf5 style: \cf7 TextStyle\cf5 (\
                      fontSize: \cf9 40.0\cf2 ,\
                      \cf5 fontWeight: FontWeight.
\f2\i \cf8 w700
\f1\i0 \cf2 ,\
                      \cf5 fontFamily: \cf4 'Times New Roman'\cf2 ,\
                    \cf5 )\cf2 ,\
                  \cf5 )\cf2 ,\
                \cf5 )\cf2 ,\
              \cf5 )\cf2 ,\
            \cf5 )\cf2 ,\
          \cf5 ]\cf2 ,\
        \cf5 )\cf2 ,\
      \cf5 )\cf2 ,\
    \cf5 )\cf2 ;\
\
\
  \cf5 \}\
\}\
\
\
\
REsultpage,dart\
\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\fs26 \cf10 impo\cf2 rt \cf4 'package:flutter/material.dart'\cf2 ;\
 \
class \cf5 resultpage \cf2 extends \cf5 StatefulWidget \{\
  \cf2 const \cf5 resultpage(\{Key? key\}) : \cf2 super\cf5 (key: key)\cf2 ;\
\
  \cf6 @override\
  \cf5 State<resultpage> \cf7 createState\cf5 () => \cf7 _resultpageState\cf5 ()\cf2 ;\
\cf5 \}\
\
\cf2 class \cf5 _resultpageState \cf2 extends \cf5 State<resultpage> \{\
  \cf6 @override\
  \cf5 Widget \cf7 build\cf5 (BuildContext context) \{\
    \cf2 return \cf7 Scaffold\cf5 (\
      appBar: \cf7 AppBar\cf5 (\
        title: \cf7 Text\cf5 (\
          \cf4 "Result"\cf2 ,\
        \cf5 )\cf2 ,\
      \cf5 )\cf2 ,\
      \cf5 body:  \cf7 Column\cf5 (\
        children: <Widget>[\
          \cf7 Expanded\cf5 (\
            flex: \cf9 6\cf2 ,\
            \cf5 child: \cf7 Material\cf5 (\
              child: \cf7 Container\cf5 (\
                child: \cf7 ClipRect\cf5 (\
                  child: Image(\
                     \cf4 ""\cf2 ,\
                  \cf5 )\cf2 ,\
                \cf5 )\cf2 ,\
              \cf5 )\cf2 ,\
            \cf5 )\cf2 ,\
          \cf5 )\cf2 ,\
          \cf5 Expanded(\
            flex: \cf9 4\cf2 ,\
          \cf5 )\cf2 ,\
        \cf5 ]\cf2 ,\
      \cf5 )\cf2 ,\
    \cf5 )\cf2 ;\
  \cf5 \}\
\}\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\fs36 \cf11 \
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0 \cf0 \
}